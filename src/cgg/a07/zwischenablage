

for (var pixel : pixels) {
        Color color = pixel.get();
        setPixel(x, , color);


        currentPixel++;

        // Calculate the progress percentage and estimated remaining time
        int progressPercentage = (int) (((double) currentPixel / totalPixels) * 100);
        long elapsedTime = System.nanoTime() - startTime;
        long estimatedTimeRemaining = (long) ((elapsedTime / (double) currentPixel) * (totalPixels - currentPixel));

        // Build the progress bar string
        StringBuilder progressBar = new StringBuilder("[");
        for (int i = 0; i < 50; i++) {
          if (i < progressPercentage / 2) {
            progressBar.append("=");
          } else if (i == progressPercentage / 2) {
            progressBar.append(">");
          } else {
            progressBar.append(" ");
          }
        }
        progressBar.append("]");

        // Print the progress information
        System.out.print("\r" + "Sampling" + progressBar.toString() + " " + progressPercentage + "%"
            + "Total Time" + startTime / 1_000_000_000 + "s" + " Time remaining: "
            + estimatedTimeRemaining / 1_000_000_000 + "s");
      }